name: Build and Push Docker Image
on:
  push:
    branches:
      - main

  workflow_dispatch:
    inputs:
      version:
        description: 'Version tag for the Docker image'
        required: true

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: endeavour-app                 # Docker image name
      IMAGE_TAG: ${{ github.sha }}              # Full commit SHA
      USERNAME: mitalmgadoya

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Python 3.11
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest yamllint

      # Run Python tests
      - name: Run pytest
        run: |
          python -m pytest -v

      # Run YAML linter
      - name: Run yamllint
        run: |
          yamllint .

      # - name: Log in to Docker Hub
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ env.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          IMAGE_TAG_SHORT=$(git rev-parse --short HEAD)
          docker build -t ${{ env.IMAGE_NAME }}:$IMAGE_TAG_SHORT .

      - name: Push Docker image
        run: |
          IMAGE_TAG_SHORT=$(git rev-parse --short HEAD)

          # If input version is empty, use commit SHA
          if [ -z "${{ github.event.inputs.version }}" ]; then
            docker tag ${{ env.IMAGE_NAME }}:$IMAGE_TAG_SHORT \
              ${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG_SHORT
            docker push \
              ${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:$IMAGE_TAG_SHORT
          else
            docker tag ${{ env.IMAGE_NAME }}:$IMAGE_TAG_SHORT \
              ${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version }}
            docker push \
              ${{ env.USERNAME }}/${{ env.IMAGE_NAME }}:${{ github.event.inputs.version }}
          fi
